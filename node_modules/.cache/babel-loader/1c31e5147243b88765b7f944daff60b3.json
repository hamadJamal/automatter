{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\hamma\\\\Desktop\\\\CopyOfWindowPopUP\\\\Automation\\\\automatter\\\\src\\\\App.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\n/*global chrome*/\nimport { useState, Text, useEffect } from \"react\";\nimport \"./App.css\";\nimport ReactDOM from \"react-dom\";\nimport React from \"react\";\nimport { makeStyles } from '@material-ui/core/styles';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst ws = new WebSocket(\"ws://localhost:8082\");\nconst useStyles = makeStyles(theme => ({\n  button: {\n    display: 'block',\n    marginTop: theme.spacing(1)\n  },\n  formControl: {\n    margin: theme.spacing(1),\n    minWidth: 120\n  }\n}));\n\nconst ControlledOpenSelect = ({\n  Dictionary,\n  SelectedUIControl,\n  Setter,\n  options\n}) => {\n  _s();\n\n  const classes = useStyles();\n  const [age, setAge] = React.useState('');\n  const [open, setOpen] = React.useState(false);\n\n  const handleChange = event => {\n    Setter(prevState => ({ ...prevState,\n      [SelectedUIControl]: event.target.value\n    }));\n    setAge(event.target.value);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const handleOpen = () => {\n    setOpen(true);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(FormControl, {\n      className: classes.formControl,\n      children: /*#__PURE__*/_jsxDEV(Select, {\n        labelId: \"demo-controlled-open-select-label\",\n        id: \"demo-controlled-open-select\",\n        open: open,\n        onClose: handleClose,\n        onOpen: handleOpen,\n        value: Dictionary[SelectedUIControl] ? Dictionary[SelectedUIControl] : age,\n        onChange: handleChange,\n        children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n          value: \"\",\n          children: /*#__PURE__*/_jsxDEV(\"em\", {\n            children: \"None\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 11\n        }, this), Object.values(options).map((item, index) => /*#__PURE__*/_jsxDEV(MenuItem, {\n          value: item,\n          children: item\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 11\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ControlledOpenSelect, \"kY2kimeFWj34UZ4+rj83gEaUHuI=\", false, function () {\n  return [useStyles];\n});\n\n_c = ControlledOpenSelect;\n\nfunction App() {\n  _s2();\n\n  const [SupportedDataTypes, setSupportedDataTypes] = useState({});\n  const [clickStream, setClickStream] = useState([\"Tagname - INPUT\" + \"\\n\" + \"lightning-input_input -\" + \"\\n\" + \"type - text\" + \"\\n\" + \"id - input-233\" + \"\\n\" + \"aria-invalid - false\" + \"\\n\" + \"maxlength - 40\" + \"\\n\" + \"placeholder - First Name\" + \"\\n\" + \"name - firstName\" + \"\\n\" + \"class - slds-input\" + \"\\n\", \"Tagname - INPUT\" + \"\\n\" + \"lightning-input_input -\" + \"\\n\" + \"type - text\" + \"\\n\" + \"id - input-236\" + \"\\n\" + \"aria-invalid - false\" + \"\\n\" + \"maxlength - 40\" + \"\\n\" + \"placeholder - Suffix\" + \"\\n\" + \"name - suffix\" + \"\\n\" + \"class - slds-input\" + \"\\n\"]);\n  const allowedAttributes = [\"Tagname\", \"type\", \"id\", \"name\", \"class\", \"title\", \"placeholder\", \"cols\", \"rows\", \"role\", \"maxlength\", \"href\", \"data-aura-rendered-by\", \"focusable\"];\n  const [pauseResume, setPauseResume] = useState(\"Pause\");\n  const [showSaveButton, setShowSaveButton] = useState(false);\n  const [SequenceAndMapping, setSequenceAndMapping] = useState({});\n  useEffect(() => {\n    ws.addEventListener(\"open\", e => {\n      ws.send(JSON.stringify(\"DataTypes\"));\n    });\n    ws.addEventListener(\"message\", message => {\n      console.log(\"Message\", message);\n      setSupportedDataTypes(JSON.parse(message.data));\n    });\n  }, []); // chrome.runtime.onMessage.addListener((request, sender,sendResponse)=>{\n  //   console.log(request)\n  //   setClickStream([...clickStream, request.elementDetected])\n  //   sendResponse(\"I have received your message\");\n  // }) \n\n  var SiteTabId;\n\n  const sendMessageToContentScript = ToDO => {\n    if (ToDO == \"Pause\") {\n      setPauseResume(\"Resume\");\n    } else if (ToDO == \"Resume\") {\n      setPauseResume(\"Pause\");\n    } else if (ToDO == \"Stop\") {\n      setShowSaveButton(true);\n    } //   chrome.tabs.query({active: true}, function(tabs){\n    //     SiteTabId = tabs[0].id\n    //     chrome.tabs.sendMessage(SiteTabId, {Recording: ToDO}, function(response){\n    //       console.log(response)\n    //     });\n    //  });\n\n  };\n\n  const SaveTheSequenceAndMapping = () => {\n    var keys = [];\n\n    for (var k in SequenceAndMapping) keys.push(k);\n\n    var mask = clickStream.map(item => keys.includes(item));\n    var NotMapped = clickStream.filter((item, i) => !mask[i]);\n    NotMapped.forEach(element => {\n      SequenceAndMapping[element] = \"\";\n    });\n    console.log(SequenceAndMapping);\n    ws.addEventListener(\"open\", e => {\n      ws.send(JSON.stringify(SequenceAndMapping));\n    });\n  };\n\n  function RenderItem(props) {\n    const text = props.text;\n    var eachLine = text.split(\"\\n\");\n    var FINAL_TEXT = \"\";\n    eachLine.forEach(element => {\n      var attribute = element.split(\"-\")[0]; // console.log(attribute)\n\n      if (allowedAttributes.includes(attribute.replace(/ /g, \"\"))) {\n        FINAL_TEXT = FINAL_TEXT + element + \"\\n\";\n      }\n    });\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"item\",\n      children: FINAL_TEXT\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 210,\n      columnNumber: 12\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        id: \"Start\",\n        onClick: () => sendMessageToContentScript('Start'),\n        children: \"Start\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 221,\n        columnNumber: 3\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 222,\n        columnNumber: 3\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        id: \"Pause\",\n        onClick: () => sendMessageToContentScript(pauseResume),\n        children: pauseResume\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 223,\n        columnNumber: 3\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 224,\n        columnNumber: 3\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        id: \"Resume\",\n        onClick: () => sendMessageToContentScript('Stop'),\n        children: \"Stop\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 225,\n        columnNumber: 3\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 226,\n        columnNumber: 3\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 227,\n        columnNumber: 3\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: clickStream.map(function (name, index) {\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(RenderItem, {\n              text: name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 233,\n              columnNumber: 23\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 234,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(ControlledOpenSelect, {\n              Dictionary: SequenceAndMapping,\n              SelectedUIControl: name,\n              Setter: setSequenceAndMapping,\n              options: SupportedDataTypes\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 236,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 237,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 238,\n              columnNumber: 21\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 232,\n            columnNumber: 28\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 229,\n        columnNumber: 3\n      }, this), showSaveButton ? /*#__PURE__*/_jsxDEV(\"button\", {\n        id: \"Save\",\n        onClick: SaveTheSequenceAndMapping,\n        children: \"Save\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 247,\n        columnNumber: 3\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 249,\n        columnNumber: 1\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 220,\n      columnNumber: 3\n    }, this)\n  }, void 0, false);\n}\n\n_s2(App, \"TpzcA2BKH0xdcj7Ll6Xh2+LVfCw=\");\n\n_c2 = App;\nexport default App;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"ControlledOpenSelect\");\n$RefreshReg$(_c2, \"App\");","map":{"version":3,"sources":["C:/Users/hamma/Desktop/CopyOfWindowPopUP/Automation/automatter/src/App.js"],"names":["useState","Text","useEffect","ReactDOM","React","makeStyles","InputLabel","MenuItem","FormControl","Select","ws","WebSocket","useStyles","theme","button","display","marginTop","spacing","formControl","margin","minWidth","ControlledOpenSelect","Dictionary","SelectedUIControl","Setter","options","classes","age","setAge","open","setOpen","handleChange","event","prevState","target","value","handleClose","handleOpen","Object","values","map","item","index","App","SupportedDataTypes","setSupportedDataTypes","clickStream","setClickStream","allowedAttributes","pauseResume","setPauseResume","showSaveButton","setShowSaveButton","SequenceAndMapping","setSequenceAndMapping","addEventListener","e","send","JSON","stringify","message","console","log","parse","data","SiteTabId","sendMessageToContentScript","ToDO","SaveTheSequenceAndMapping","keys","k","push","mask","includes","NotMapped","filter","i","forEach","element","RenderItem","props","text","eachLine","split","FINAL_TEXT","attribute","replace","name"],"mappings":"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","sourcesContent":["    /*global chrome*/\n\nimport { useState, Text, useEffect } from \"react\";\nimport \"./App.css\"\nimport ReactDOM from \"react-dom\";\nimport React from \"react\";\nimport { makeStyles } from '@material-ui/core/styles';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\nconst ws = new WebSocket(\"ws://localhost:8082\")\n\n\n\nconst useStyles = makeStyles((theme) => ({\n  button: {\n    display: 'block',\n    marginTop: theme.spacing(1),\n  },\n  formControl: {\n    margin: theme.spacing(1),\n    minWidth: 120,\n  },\n}));\n\nconst ControlledOpenSelect = ({Dictionary,SelectedUIControl, Setter, options}) => {\n  const classes = useStyles();\n  const [age, setAge] = React.useState('');\n  const [open, setOpen] = React.useState(false);\n  \n  const handleChange = (event) => {\n\n    Setter(prevState => ({\n          ...prevState,\n          [SelectedUIControl]:event.target.value \n      }));\n\n\n    setAge(event.target.value);\n\n\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n\n  };\n\n  const handleOpen = () => {\n    setOpen(true);\n  };\n\n  return (\n    <div>\n      <FormControl className={classes.formControl}>\n        <Select\n          labelId=\"demo-controlled-open-select-label\"\n          id=\"demo-controlled-open-select\"\n          open={open}\n          onClose={handleClose}\n          onOpen={handleOpen}\n          value={Dictionary[SelectedUIControl]? Dictionary[SelectedUIControl] : age}\n          onChange={handleChange}\n        >\n          \n          <MenuItem value=\"\">\n            <em>None</em>\n          </MenuItem>\n          {Object.values(options).map((item,index) => (\n\n          <MenuItem key={ index } value={item}>{item}</MenuItem>\n\n          ))}\n        </Select>\n      </FormControl>\n    </div>\n  );\n};\n  \nfunction App() {\n\n\n  const [SupportedDataTypes,setSupportedDataTypes] = useState({})\n\n  const [clickStream, setClickStream] = useState([\n    \"Tagname - INPUT\"+\"\\n\"+\n   \"lightning-input_input -\"+\"\\n\"+\n    \"type - text\"+\"\\n\"+\n    \"id - input-233\"+\"\\n\"+\n   \"aria-invalid - false\"+\"\\n\"+\n    \"maxlength - 40\"+\"\\n\"+\n   \"placeholder - First Name\"+\"\\n\"+\n    \"name - firstName\"+\"\\n\"+\n    \"class - slds-input\"+\"\\n\",\n\n\"Tagname - INPUT\"+\"\\n\"+\n\"lightning-input_input -\"+\"\\n\"+\n\"type - text\"+\"\\n\"+\n\"id - input-236\"+\"\\n\"+\n\"aria-invalid - false\"+\"\\n\"+\n\"maxlength - 40\"+\"\\n\"+\n\"placeholder - Suffix\"+\"\\n\"+\n\"name - suffix\"+\"\\n\"+\n\"class - slds-input\"+\"\\n\"\n\n\n\n  ]);\n  const allowedAttributes = [\"Tagname\",\"type\",\"id\",\"name\",\"class\",\"title\",\"placeholder\", \"cols\", \"rows\", \"role\", \"maxlength\", \"href\", \"data-aura-rendered-by\", \"focusable\"]\n\n\n  const [pauseResume, setPauseResume] = useState(\"Pause\");\n  const [showSaveButton, setShowSaveButton] = useState(false);\n  const [SequenceAndMapping, setSequenceAndMapping] = useState({});\n\n  useEffect(()=>{\n\n    ws.addEventListener(\"open\", e=>{\n\n      ws.send(JSON.stringify(\"DataTypes\"))\n  \n     });\n  \n     ws.addEventListener(\"message\", message => {\n       console.log(\"Message\",message)\n      setSupportedDataTypes(JSON.parse(message.data))\n\n\n  \n  \n\n})\n    },[])\n\n\n  // chrome.runtime.onMessage.addListener((request, sender,sendResponse)=>{\n    \n  //   console.log(request)\n  //   setClickStream([...clickStream, request.elementDetected])\n  //   sendResponse(\"I have received your message\");\n  // }) \n  var SiteTabId;    \n  const sendMessageToContentScript = (ToDO) => {\n          if (ToDO==\"Pause\"){\n            setPauseResume(\"Resume\")\n          }\n          else if (ToDO == \"Resume\") {\n            setPauseResume(\"Pause\")\n          }\n          else if (ToDO == \"Stop\"){\n            setShowSaveButton(true)\n          }\n\n        //   chrome.tabs.query({active: true}, function(tabs){\n        //     SiteTabId = tabs[0].id\n        //     chrome.tabs.sendMessage(SiteTabId, {Recording: ToDO}, function(response){\n            \n        //       console.log(response)\n        //     });\n        //  });\n    \n       \n\n   \n    \n  }\n\n  const SaveTheSequenceAndMapping = () => {\n\n    var keys = [];\n    for(var k in SequenceAndMapping) keys.push(k);\n    var mask = clickStream.map(item => keys.includes(item));\n    var NotMapped = clickStream.filter((item, i) => !mask[i]);\n    NotMapped.forEach(element => {\n      SequenceAndMapping[element]=\"\"\n      \n  });\n\n  console.log(SequenceAndMapping)\n\n\n\n\n\n\n   ws.addEventListener(\"open\", e=>{\n\n    ws.send(JSON.stringify(SequenceAndMapping))\n\n   });\n\n  }\n\n  function RenderItem(props) {\n    const text = props.text;\n    var eachLine = text.split(\"\\n\")\n    var FINAL_TEXT =\"\"\n    eachLine.forEach(element => {\n\n      var attribute = element.split(\"-\")[0]\n      // console.log(attribute)\n      if(allowedAttributes.includes(attribute.replace(/ /g, \"\"))){\n        FINAL_TEXT = FINAL_TEXT+element+\"\\n\"\n\n      }\n      \n    });\n\n    return <div id = \"item\">{FINAL_TEXT}</div>;\n}\n\n\n  return (\n    \n\n<>\n\n\n  <div>\n  <button id = \"Start\" onClick = {() => sendMessageToContentScript('Start')}>Start</button>\n  <br></br>\n  <button id = \"Pause\"  onClick = {() => sendMessageToContentScript(pauseResume)}>{pauseResume}</button>\n  <br></br>\n  <button id = \"Resume\" onClick = {() => sendMessageToContentScript('Stop')}>Stop</button>\n  <br></br>\n  <br></br>\n  \n  <ul>\n                {\n                clickStream.map(function(name, index){\n                    return <div key={ index }>\n                      <RenderItem text = {name}/>\n                    <br></br>\n\n                    <ControlledOpenSelect Dictionary = {SequenceAndMapping} SelectedUIControl = {name} Setter = {setSequenceAndMapping} options = {SupportedDataTypes}/>\n                    <hr></hr>\n                    <br></br>\n\n                    </div>;\n                  })}\n  </ul>\n\n\n{\nshowSaveButton?\n  <button id = \"Save\" onClick={SaveTheSequenceAndMapping}>Save</button>  \n:\n<div></div>\n}\n\n  </div>\n</>\n\n      );\n}\n\nexport default App;\n\n"]},"metadata":{},"sourceType":"module"}