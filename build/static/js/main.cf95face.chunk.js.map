{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["ws","WebSocket","useStyles","makeStyles","theme","button","display","marginTop","spacing","formControl","margin","minWidth","ControlledOpenSelect","Dictionary","SelectedUIControl","Setter","options","classes","React","useState","age","setAge","open","setOpen","FormControl","className","Select","labelId","id","onClose","onOpen","value","onChange","event","prevState","target","MenuItem","Object","values","map","item","index","App","SiteTabId","SupportedDataTypes","setSupportedDataTypes","clickStream","setClickStream","allowedAttributes","pauseResume","setPauseResume","showSaveButton","setShowSaveButton","SequenceAndMapping","setSequenceAndMapping","useEffect","addEventListener","e","send","JSON","stringify","message","parse","data","chrome","runtime","onMessage","addListener","request","sender","sendResponse","console","log","elementDetected","sendMessageToContentScript","ToDO","tabs","query","active","sendMessage","Recording","response","RenderItem","props","eachLine","text","split","FINAL_TEXT","forEach","element","attribute","includes","replace","onClick","name","keys","k","push","mask","filter","i","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.cf95face.chunk.js","sourcesContent":["    /*global chrome*/\n\nimport { useState, Text, useEffect } from \"react\";\nimport \"./App.css\"\nimport ReactDOM from \"react-dom\";\nimport React from \"react\";\nimport { makeStyles } from '@material-ui/core/styles';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\nconst ws = new WebSocket(\"ws://localhost:8082\")\n\n\n\nconst useStyles = makeStyles((theme) => ({\n  button: {\n    display: 'block',\n    marginTop: theme.spacing(1),\n  },\n  formControl: {\n    margin: theme.spacing(1),\n    minWidth: 120,\n  },\n}));\n\nconst ControlledOpenSelect = ({Dictionary,SelectedUIControl, Setter, options}) => {\n  const classes = useStyles();\n  const [age, setAge] = React.useState('');\n  const [open, setOpen] = React.useState(false);\n  \n  const handleChange = (event) => {\n\n    Setter(prevState => ({\n          ...prevState,\n          [SelectedUIControl]:event.target.value \n      }));\n\n\n    setAge(event.target.value);\n\n\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n\n  };\n\n  const handleOpen = () => {\n    setOpen(true);\n  };\n\n  return (\n    <div>\n      <FormControl className={classes.formControl}>\n        <Select\n          labelId=\"demo-controlled-open-select-label\"\n          id=\"demo-controlled-open-select\"\n          open={open}\n          onClose={handleClose}\n          onOpen={handleOpen}\n          value={Dictionary[SelectedUIControl]? Dictionary[SelectedUIControl] : age}\n          onChange={handleChange}\n        >\n          \n          <MenuItem value=\"\">\n            <em>None</em>\n          </MenuItem>\n          {Object.values(options).map((item,index) => (\n\n          <MenuItem key={ index } value={item}>{item}</MenuItem>\n\n          ))}\n        </Select>\n      </FormControl>\n    </div>\n  );\n};\n  \nfunction App() {\n\n\n  const [SupportedDataTypes,setSupportedDataTypes] = useState({})\n\n  const [clickStream, setClickStream] = useState([\n//     \"Tagname - INPUT\"+\"\\n\"+\n//    \"lightning-input_input -\"+\"\\n\"+\n//     \"type - text\"+\"\\n\"+\n//     \"id - input-233\"+\"\\n\"+\n//    \"aria-invalid - false\"+\"\\n\"+\n//     \"maxlength - 40\"+\"\\n\"+\n//    \"placeholder - First Name\"+\"\\n\"+\n//     \"name - firstName\"+\"\\n\"+\n//     \"class - slds-input\"+\"\\n\",\n\n// \"Tagname - INPUT\"+\"\\n\"+\n// \"lightning-input_input -\"+\"\\n\"+\n// \"type - text\"+\"\\n\"+\n// \"id - input-236\"+\"\\n\"+\n// \"aria-invalid - false\"+\"\\n\"+\n// \"maxlength - 40\"+\"\\n\"+\n// \"placeholder - Suffix\"+\"\\n\"+\n// \"name - suffix\"+\"\\n\"+\n// \"class - slds-input\"+\"\\n\"\n\n\n\n  ]);\n  const allowedAttributes = [\"Tagname\",\"type\",\"id\",\"name\",\"class\",\"title\",\"placeholder\", \"cols\", \"rows\", \"role\", \"maxlength\", \"href\", \"data-aura-rendered-by\", \"focusable\"]\n\n\n  const [pauseResume, setPauseResume] = useState(\"Pause\");\n  const [showSaveButton, setShowSaveButton] = useState(false);\n  const [SequenceAndMapping, setSequenceAndMapping] = useState({});\n\n  useEffect(()=>{\n\n    ws.addEventListener(\"open\", e=>{\n\n      ws.send(JSON.stringify(\"DataTypes\"))\n  \n     });\n  \n     ws.addEventListener(\"message\", message => {\n      setSupportedDataTypes(JSON.parse(message.data))\n\n\n  \n  \n\n})\n    },[])\n\n\n  chrome.runtime.onMessage.addListener((request, sender,sendResponse)=>{\n    \n    console.log(request)\n    setClickStream([...clickStream, request.elementDetected])\n    sendResponse(\"I have received your message\");\n  }) \n  var SiteTabId;    \n  const sendMessageToContentScript = (ToDO) => {\n          if (ToDO==\"Pause\"){\n            setPauseResume(\"Resume\")\n          }\n          else if (ToDO == \"Resume\") {\n            setPauseResume(\"Pause\")\n          }\n          else if (ToDO == \"Stop\"){\n            setShowSaveButton(true)\n          }\n\n          chrome.tabs.query({active: true}, function(tabs){\n            SiteTabId = tabs[0].id\n            chrome.tabs.sendMessage(SiteTabId, {Recording: ToDO}, function(response){\n            \n              console.log(response)\n            });\n         });\n    \n       \n\n   \n    \n  }\n\n  const SaveTheSequenceAndMapping = () => {\n\n    var keys = [];\n    for(var k in SequenceAndMapping) keys.push(k);\n    var mask = clickStream.map(item => keys.includes(item));\n    var NotMapped = clickStream.filter((item, i) => !mask[i]);\n    NotMapped.forEach(element => {\n      SequenceAndMapping[element]=\"\"\n      \n  });\n\n  console.log(SequenceAndMapping)\n\n\n    ws.send(JSON.stringify(SequenceAndMapping))\n\n  }\n\n  function RenderItem(props) {\n    const text = props.text;\n    var eachLine = text.split(\"\\n\")\n    var FINAL_TEXT =\"\"\n    eachLine.forEach(element => {\n\n      var attribute = element.split(\"-\")[0]\n      // console.log(attribute)\n      if(allowedAttributes.includes(attribute.replace(/ /g, \"\"))){\n        FINAL_TEXT = FINAL_TEXT+element+\"\\n\"\n\n      }\n      \n    });\n\n    return <div id = \"item\">{FINAL_TEXT}</div>;\n}\n\n\n  return (\n    \n\n<>\n\n\n  <div>\n  <button id = \"Start\" onClick = {() => sendMessageToContentScript('Start')}>Start</button>\n  <br></br>\n  <button id = \"Pause\"  onClick = {() => sendMessageToContentScript(pauseResume)}>{pauseResume}</button>\n  <br></br>\n  <button id = \"Resume\" onClick = {() => sendMessageToContentScript('Stop')}>Stop</button>\n  <br></br>\n  <br></br>\n  \n  <ul>\n                {\n                clickStream.map(function(name, index){\n                    return <div key={ index }>\n                      <RenderItem text = {name}/>\n                    <br></br>\n\n                    <ControlledOpenSelect Dictionary = {SequenceAndMapping} SelectedUIControl = {name} Setter = {setSequenceAndMapping} options = {SupportedDataTypes}/>\n                    <hr></hr>\n                    <br></br>\n\n                    </div>;\n                  })}\n  </ul>\n\n\n{\nshowSaveButton?\n  <button id = \"Save\" onClick={SaveTheSequenceAndMapping}>Save</button>  \n:\n<div></div>\n}\n\n  </div>\n</>\n\n      );\n}\n\nexport default App;\n\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}